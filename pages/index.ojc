# index.ojc

modules = require './modules/index'
_ = modules._

_template = require './_template'
_content = require './_content'

fontFamilySansSerif = 'Helvetica, Arial, sans-serif'

transitionTime = 30

module.exports = ->

  _template

    title: 'OJ - Unified Templating'

    styles: [
      'reset.css'
      'gg.css'
    ]

    scripts: [
      'jquery.js'
      'jquery.event.drag.js'
      'jquery.ba-resize.min.js'
      'underscore.js'
      'backbone.js'
      'coffee-script.js'
      'ace/ace.js'
    ]

    body: ->

      img c:'logo', src:'media/oj_logo_big.png'

      css
        '.logo':
          marginLeft:'auto'
          marginRight:'auto'
          marginTop: '55px'
          display:'block'
          position:'relative'

      h1 c:'subtitle', ->
        span 'A JavaScript library to build websites with objects.'
      # h2 c:'subtitle', ->
      #   span 'A JavaScript library to build websites with objects. '
      #   i('Thirsty people.')

      css
        '.subtitle':
          textAlign:'center'
          marginTop: '20px'
          display:'block'
          position:'relative'
          borderBottom:'0'
          color:'#E69927'
          fontFamily: fontFamilySansSerif
          fontWeight: 'lighter'

      editor = TryEditor c:'editor', lineCount:16

      css
        '.editor':
          marginTop: '55px'

      dots = BulletList c:'dots', models:[
        {
          js:"""
            h1("What are OJ Objects?");

            var myList = oj.BulletList(
              'They',
              'create',
              'themselves'
            );

            oj.Button('Add', {click:function(){
              myList.add('And live edit!')
            }});

            oj.Button('Move', {click:function(){
              myList.move(0, myList.length)
            }});

            p('(Hint: push the buttons!)');
          """
          cs:"""
            h1 "What are OJ Objects?"

            myList = oj.BulletList(
              'They'
              'create'
              'themselves'
            )

            oj.Button 'Add', click: ->
              myList.add('And live edit!')

            oj.Button 'Move', click: ->
              myList.move 0, myList.length

            p '(Hint: push the buttons!)'
          """
        }

        {
          js:"""
            h1('Two-Way Model Binding');

            // Create a Backbone UserModel
            var UserModel = Backbone.Model.extend({});
            var user = new UserModel({name:'Evan'});

            // Bind controls to the user's name
            TextBox({model:user, key:'name'});
            TextArea({model:user, key:'name'});
            ListBox({model:user, key:'name',
                     options:['', 'Brian','Evan','Sam']});
            CheckBox({model:user, key:'name'});

            // Add CSS to space the controls evenly
            css({'.oj-TextBox,.oj-TextArea,.oj-ListBox':{
              width:'200px',margin:'20px 0',display:'block'}})

          """, cs:"""
            h1 'Two-Way Model Binding'

            # Create a Backbone UserModel
            UserModel = Backbone.Model.extend({})
            user = new UserModel name:'Evan'

            # Bind controls to the user's name
            TextBox model:user, key:'name'
            TextArea model:user, key:'name'
            ListBox model:user, key:'name',
                     options:['', 'Brian','Evan','Sam']
            CheckBox model:user, key:'name'

            # Add CSS to space the controls evenly
            css '.oj-TextBox,.oj-TextArea,.oj-ListBox':
              {width:'200px',margin:'20px 0',display:'block'}

          """
        }

        {
          js:"""
            h1('HTML Creation');

            p('Tags are functions.')

            p('Attributes are objects...', {
              style:{fontStyle:'italic'}
            })

            ul(function(){
              li('Nest');
              li('with');
              li('functions!');
            });
          """
          cs:"""
            h1 'HTML Creation'

            p 'Tags are functions.'

            p 'Attributes are objects...',
              style:
                fontStyle:'italic'

            ul ->
              li 'Nest'
              li 'with'
              li 'functions!'
          """
        }


        {
          js:"""
            h1('CSS Creation')

            css({
              '.red':{color:'#e00'},
              '.big':{fontSize:'25px'}
            });

            div({'class':'red'}, 'This is red');
            div({c:'big'}, 'This is big');
            div({c:'big red'}, 'This is both');
          """
          cs:"""
            h1 'CSS Creation'

            css
              '.red':
                color:'#e00'
              '.big':
                fontSize:'25px'

            div class:'red', 'This is red'
            div c:'big', 'This is big'
            div c:'big red', 'This is both'
          """
        }

        {
          js:"""
            h1('Event Binding');

            p('jQuery is the only ',
              'dependency of OJ. ',
              'This is why.')

            var btn = Button('Click me!', {
              click:function(){
                alert('Click works!');
            }});

            TextBox('Change me', {
              change:function(){
                btn.title = this.value
            }});
          """
          cs:"""
            h1 'Event Binding'

            p 'jQuery is the only ',
              'dependency of OJ. ',
              'This is why.'


            btn = Button 'Click me!', click: ->
              alert('Click works!');

            TextBox 'Change me', change: ->
              btn.title = this.value
          """
        }


        {
          js:"""
            markdown(
              "# Markdown Plugin",
              "Use it like a _tag function_.",
              "* It's",
              "* <u>Pretty</u>",
              "* **Nice**"
            );
          """,cs:"""
            markdown \"\"\"
              # Markdown Plugin
              Use it like a _tag function_.

              * It's
              * <u>Pretty</u>
              * **Nice**
            \"\"\"
          """
        }
        {
          js:"""
            h1("YouTubeVideo Plugin")

            var myVideo = YouTubeVideo(
              'EAcdvmnZ_GM'
            );

            // Change volume
            myVideo.volume = 0.7;

            // Add play / pause toggle button
            Button('Play / Pause', {
              click:function(){
                myVideo.playToggle()
              }
            });br();

          """, cs: """
            h1 "YouTubeVideo Plugin"

            myVideo = YouTubeVideo(
              'EAcdvmnZ_GM'
            );br()

            # Change volume
            myVideo.volume = 0.7;

            # Add play / pause toggle button
            Button 'Play / Pause',
              click: ->
                myVideo.playToggle()
          """
        }
        {
          js:"""
            h1('AceEditor Plugin');

            var myEditor = AceEditor(
              '<body>',
              '  <p>Choose theme below...</p>',
              '</body>', {
              mode:'html'
            });

            // Change theme with a list box
            ListBox({options:[
                '',
                'solarized_light',
                'solarized_dark'
              ], change:function(){
                myEditor.theme = this.value;
              }
            });
          """
          cs:"""
            h1 'AceEditor Plugin'
            myEditor = AceEditor(\"\"\"
                <body>
                  <p>Choose theme below...</p>
                </body>
              \"\"\",
              mode:'html'
            )

            # Change theme with a list box
            ListBox options:[
                ''
                'solarized_light'
                'solarized_dark'
              ],
              change: ->
                myEditor.theme = @value
          """
        }

        {
          js:"""
            h1('VimeoVideo Plugin');

            VimeoVideo(24715531);
          """
          cs:"""
            h1 'VimeoVideo Plugin'

            VimeoVideo 24715531
          """
        }
        {
          js:"""
            h1('TwitterButton Plugin')

            TwitterButton('evanmoran')
          """
          cs:"""
            h1 'TwitterButton Plugin'

            TwitterButton 'evanmoran'
          """
        }
        {
          js:"""
            h1('GitHub Button Plugin');

            // Follow
            GitHubButton('evanmoran');

            // Star
            GitHubButton('ojjs', 'oj');

            // Fork
            GitHubButton('ojjs', 'oj', {type:'fork'});
          """
          cs:"""
            h1  'GitHub Button Plugin'

            # Follow
            GitHubButton 'evanmoran'

            # Star
            GitHubButton 'ojjs', 'oj'

            # Fork
            GitHubButton 'ojjs', 'oj', type:'fork'
          """
        }
        # {
        #   js:"""
        #     h1('JSFiddle Plugin');

        #     JSFiddle('evanmoran/vhNcD');
        #   """
        #   cs:"""
        #     h1  'JSFiddle Plugin'

        #     JSFiddle 'evanmoran/vhNcD'
        #   """
        # }
      ], each: (model) ->
        div c:'dot', 'data-js': model.js, 'data-cs':model.cs

      css
        'ul.dots':
          listStyleType:'none'
          width:'' + (dots.count * 21) + 'px'
          margin:'0 auto 30px'
          'li':
            display:'inline-block'
            margin:'10px 0 0 0'
            '&:not(:first-child)':
              marginLeft:'10px'
          '.dot':
            width:'11px'
            height:'11px'
            display:'inline-block'
            position:'relative'
            background:'url(media/dot_empty.png) no-repeat left top'
            cursor:'pointer'
            '&.filled':
              background:'url(media/dot_filled.png) no-repeat left top'

      onload ->

        selectDot = ($dot, fade) ->
          js = $dot.attr('data-js')
          cs = $dot.attr('data-cs')
          window.editor = editor

          editor.set {js:js, cs:cs}
          $('ul.dots .dot').removeClass 'filled'
          $dot.addClass 'filled'

        selectDotWithFade = ($dot) ->
          editor.$el.fadeOut 300, ->
            selectDot $dot
            editor.$el.fadeIn(300)

        # Select first dot
        setTimeout (->
          $dots = $('ul.dots .dot')
          random = 0#Math.floor(Math.random()*$dots.length);
          selectDot $dots.eq(random)
          ), 100

        _keepAnimatedDots = true
        nextDot = ->
          # setTimeout (->
          #   if _keepAnimatedDots
          #     # Get elements as array repeating the first
          #     dotEls = $('ul.dots .dot').get()
          #     prevEl = $('ul.dots .dot').last().get(0)
          #     for dotEl in dotEls
          #       if $(prevEl).hasClass('filled')
          #         selectDotWithFade $(dotEl)
          #         break
          #       prevEl = dotEl
          #     nextDot()
          # ), transitionTime * 1000

        # Animate dots
        nextDot()

        # Clicking a dot changes selects it and prevents animation
        $('ul.dots .dot').click (e) ->
          _keepAnimatedDots = false
          selectDotWithFade $(e.target)

        editor.$el.click (e) ->
          _keepAnimatedDots = false

        # Animate changing the dot
        setTimeout

      div c:'row', ->

        div c:'gg50', ->

          BulletList c:'bullets',
            ->
              markdown """Abstracts the web into view objects <br>that *create* and *change* websites"""
            'Unifies templating of HTML, CSS and JS'
            ->
              markdown """A library written entirely in JavaScript"""
            ->
              markdown """Backbone support built-in with <br>two-way model and collection binding"""

        div c:'gg50', ->

          BulletList c:'bullets',
            ->
              markdown """Includes the simple smart objects:<br>[List](docs.html#List), [Table](docs.html#Table), [Button](docs.html#Button), and [form elements](docs.html#form-types)"""

            ->
              markdown """A growing collection of plugins: <br>[VimeoVideo](plugins.html#VimeoVideo), [AceEditor](plugins.html#AceEditor), [and more!](plugins.html)"""
            ->
              markdown """DOM manipulation client-side <br>HTML and CSS creation server-side"""

            ->
              markdown """Node server-side support <br>(in progress)"""


        css
          '.bullets':

            '> li':
              background:'url(media/oj_bullet.png) no-repeat left top'
              listStyleType:'none'
              margin: '20px 0 10px 0'
              padding:'0 0 0 35px'
              minHeight: '50px'
              fontFamily: fontFamilySansSerif
              fontSize: '18px'
              color: '#666666'
              fontWeight:'lighter'
              p:
                fontFamily: 'Helvetica, Arial, sans-serif'
                fontSize: '18px'
                color: '#666666'
                fontWeight:'lighter'

      div c:'row', ->
        a c:'button yellow gg50', 'Learn More', href:'learn.html'
        a c:'button orange gg50', 'Download oj.js', href:'download.html'

        css
          '.button':
            height:'34px'
            borderRadius:'10px'
            textAlign:'center'
            fontSize:'22px'
            fontWeight:'lighter'
            fontFamily: fontFamilySansSerif
            color:'white'
            backgroundColor:'#FF9B00'
            '&.yellow':
              backgroundColor:'#FFC000'

            '&.orange':
              '@media only screen and (max-width: 739px)':
                marginTop:'15px'
            paddingTop: '11px'

      footer c:'gg100', ->
        GitHubButton c:'github-star-button', 'ojjs', 'oj', type:'watch', showCount:false, size:'large', width: 130

        TwitterButton c:'twitter-follow-button', 'evanmoran', showCount: false, size:'large'

        span 'Copyright 2013 Evan Moran', style:'float':'right'
